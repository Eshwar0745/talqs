# Environment Variables Template for TALQS

# ==============================================
# DATABASE CONFIGURATION
# ==============================================

# MongoDB Configuration (existing)
MONGODB_URI=mongodb://127.0.0.1:27017/talqs

# ==============================================
# FIREBASE CONFIGURATION
# ==============================================

# Firebase Project Configuration
# Get these values from your Firebase Project Settings > General > Your apps > Web app > Config
NEXT_PUBLIC_FIREBASE_API_KEY=your_api_key_here
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your_project_id.firebaseapp.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=your_project_id
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=your_project_id.appspot.com
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=your_sender_id
NEXT_PUBLIC_FIREBASE_APP_ID=your_app_id
NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=your_measurement_id

# Firebase Emulator Configuration (for development)
# Uncomment these if you're using Firebase emulators
# NEXT_PUBLIC_FIREBASE_AUTH_EMULATOR_URL=http://localhost:9099
# NEXT_PUBLIC_FIREBASE_FIRESTORE_EMULATOR_HOST=localhost:8080
# NEXT_PUBLIC_FIREBASE_STORAGE_EMULATOR_HOST=localhost:9199

# ==============================================
# NEXTAUTH CONFIGURATION (existing)
# ==============================================

# NextAuth Secret (generate a random string)
NEXTAUTH_SECRET=your_nextauth_secret_here
NEXTAUTH_URL=http://localhost:3000

# Google OAuth Credentials
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret

# GitHub OAuth Credentials
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret

# ==============================================
# APPLICATION CONFIGURATION
# ==============================================

# Application Environment
NODE_ENV=development

# Backend API URL (if using a separate backend)
BACKEND_URL=http://localhost:5000

# ==============================================
# FIREBASE SETUP INSTRUCTIONS
# ==============================================

# 1. Go to https://console.firebase.google.com/
# 2. Create a new project or select an existing one
# 3. Go to Project Settings > General
# 4. Under "Your apps", click "Add app" and select "Web"
# 5. Register your app with a nickname
# 6. Copy the config values to the FIREBASE variables above
# 7. Enable Authentication in the Firebase Console:
#    - Go to Authentication > Sign-in method
#    - Enable Email/Password, Google, and GitHub providers
# 8. Enable Firestore Database:
#    - Go to Firestore Database > Create database
#    - Choose production mode and select a region
# 9. Enable Firebase Storage:
#    - Go to Storage > Get started
#    - Choose production mode and select a region
# 10. Update Firebase Security Rules as needed

# ==============================================
# FIREBASE SECURITY RULES EXAMPLES
# ==============================================

# Firestore Rules (copy to Firestore Rules tab):
# rules_version = '2';
# service cloud.firestore {
#   match /databases/{database}/documents {
#     // Users can read and write their own user document
#     match /users/{userId} {
#       allow read, write: if request.auth != null && request.auth.uid == userId;
#     }
#     
#     // Users can read and write their own documents
#     match /documents/{docId} {
#       allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
#     }
#     
#     // Users can read and write their own chat history
#     match /chatHistory/{chatId} {
#       allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
#     }
#   }
# }

# Storage Rules (copy to Storage Rules tab):
# rules_version = '2';
# service firebase.storage {
#   match /b/{bucket}/o {
#     // Users can upload and access their own documents
#     match /documents/{userId}/{allPaths=**} {
#       allow read, write: if request.auth != null && request.auth.uid == userId;
#     }
#     
#     // Users can upload and access their own avatars
#     match /avatars/{userId}/{allPaths=**} {
#       allow read, write: if request.auth != null && request.auth.uid == userId;
#     }
#   }
# }